{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Git",
			"description": "Git 源代码管理集成",
			"command.clone": "克隆",
			"command.init": "初始化存储库",
			"command.openRepository": "打开存储库",
			"command.close": "关闭存储库",
			"command.refresh": "刷新",
			"command.openChange": "打开更改",
			"command.openFile": "打开文件",
			"command.openHEADFile": "打开文件 (HEAD)",
			"command.stage": "暂存更改",
			"command.stageAll": "暂存所有更改",
			"command.stageSelectedRanges": "暂存所选范围",
			"command.revertSelectedRanges": "还原所选更改",
			"command.stageChange": "暂存更改",
			"command.revertChange": "还原更改",
			"command.unstage": "取消暂存更改",
			"command.unstageAll": "取消暂存所有更改",
			"command.unstageSelectedRanges": "取消暂存所选范围",
			"command.clean": "放弃更改",
			"command.cleanAll": "放弃所有更改",
			"command.commit": "提交",
			"command.commitStaged": "提交已暂存文件",
			"command.commitEmpty": "创建空提交",
			"command.commitStagedSigned": "提交已暂存文件(已署名)",
			"command.commitStagedAmend": "提交已暂存文件(修改)",
			"command.commitAll": "全部提交",
			"command.commitAllSigned": "全部提交(已署名)",
			"command.commitAllAmend": "全部提交(修改)",
			"command.restoreCommitTemplate": "还原提交模板",
			"command.undoCommit": "撤消上次提交",
			"command.checkout": "签出到...",
			"command.branch": "创建分支...",
			"command.branchFrom": "从现有来源创建新的分支...",
			"command.deleteBranch": "删除分支...",
			"command.renameBranch": "重命名分支...",
			"command.merge": "合并分支...",
			"command.createTag": "创建标记",
			"command.fetch": "抓取",
			"command.fetchPrune": "获取 (删除)",
			"command.fetchAll": "从所有远程存储库中拉取",
			"command.pull": "拉取",
			"command.pullRebase": "拉取(变基)",
			"command.pullFrom": "拉取自...",
			"command.push": "推送",
			"command.pushForce": "推送(强制)",
			"command.pushTo": "推送到...",
			"command.pushToForce": "推送到...(强制)",
			"command.pushFollowTags": "推送(“关注”标记)",
			"command.pushFollowTagsForce": "推送(“关注”标记，强制)",
			"command.addRemote": "添加远程库",
			"command.removeRemote": "删除远程存储库",
			"command.sync": "同步",
			"command.syncRebase": "同步(变基)",
			"command.publish": "发布分支",
			"command.showOutput": "显示 GIT 输出",
			"command.ignore": "将文件添加到 .gitignore",
			"command.stashIncludeUntracked": "储藏(包含未跟踪)",
			"command.stash": "储藏",
			"command.stashPop": "弹出储藏...",
			"command.stashPopLatest": "弹出最新储藏",
			"command.stashApply": "应用储藏...",
			"command.stashApplyLatest": "应用最新储藏",
			"config.enabled": "是否启用 Git。",
			"config.path": "Git 可执行文件的路径和文件名。例如: `C:\\Program Files\\Git\\bin\\git.exe` (Windows)。",
			"config.autoRepositoryDetection": "配置何时自动检测存储库。",
			"config.autoRepositoryDetection.true": "扫描当前打开文件夹与当前打开文件所在文件夹的子文件夹。",
			"config.autoRepositoryDetection.false": "禁止自动扫描存储库。",
			"config.autoRepositoryDetection.subFolders": "扫描当前打开文件夹的子文件夹。",
			"config.autoRepositoryDetection.openEditors": "扫描当前打开文件的父文件夹。",
			"config.autorefresh": "是否启用自动刷新。",
			"config.autofetch": "启用时，提交将自动从当前Git存储库的默认远程获取。",
			"config.autofetchPeriod": "在启用 \"git.autofetch\" 情况下每次自动 git fetch 之间的间隔时间(以秒为单位)。",
			"config.confirmSync": "同步 Git 存储库前请先进行确认。",
			"config.countBadge": "控制 Git 计数徽章。",
			"config.countBadge.all": "对所有更改计数。",
			"config.countBadge.tracked": "仅对跟踪的更改计数。",
			"config.countBadge.off": "关闭计数器。",
			"config.checkoutType": "控制在运行“推送到...”功能时列出的分支类型。",
			"config.checkoutType.all": "显示全部参考文献。",
			"config.checkoutType.local": "只显示本地分支。",
			"config.checkoutType.tags": "仅显示标记。",
			"config.checkoutType.remote": "仅显示远程分支。",
			"config.branchValidationRegex": "用于验证新分支名称的正则表达式。",
			"config.branchWhitespaceChar": "在新分支名称中替换空白字符的字符。",
			"config.ignoreLegacyWarning": "忽略“旧版 Git”警告。",
			"config.ignoreMissingGitWarning": "忽略“缺失 Git”的警告。",
			"config.ignoreLimitWarning": "忽略“存储库中存在大量更改”的警告。",
			"config.defaultCloneDirectory": "克隆 Git 存储库的默认位置。",
			"config.enableSmartCommit": "在没有暂存的更改时提交所有更改。",
			"config.smartCommitChanges": "控制哪些更改由Smart Commit自动暂存。",
			"config.smartCommitChanges.all": "自动暂存所有更改。",
			"config.smartCommitChanges.tracked": "仅自动暂存跟踪的更改。",
			"config.suggestSmartCommit": "建议启用智能提交(在无暂存更改时提交所有更改)。",
			"config.enableCommitSigning": "启用使用 GPG 签名的提交",
			"config.discardAllScope": "控制运行“放弃所有更改”命令时放弃的更改类型。\"all\" 放弃所有更改。\"tracked\" 只放弃跟踪的文件。\"prompt\" 表示在每次运行此操作时显示提示对话框。",
			"config.decorations.enabled": "控制 Git 是否在资源管理器和“打开的编辑器”视图中添加颜色和小标。",
			"config.enableStatusBarSync": "控制Git Sync命令是否出现在状态栏中。",
			"config.promptToSaveFilesBeforeCommit": "控制 Git 是否在提交之前检查未保存的文件。",
			"config.promptToSaveFilesBeforeCommit.always": "检查是否有任何未保存的文件。",
			"config.promptToSaveFilesBeforeCommit.staged": "只检查未保存的已暂存文件。",
			"config.promptToSaveFilesBeforeCommit.never": "禁用此检查。",
			"config.postCommitCommand": "成功提交后运行 git 命令。",
			"config.postCommitCommand.none": "提交后不要运行任何命令。",
			"config.postCommitCommand.push": "成功提交后运行'Git Push'。",
			"config.postCommitCommand.sync": "成功提交后运行'Git Sync'。",
			"config.showInlineOpenFileAction": "控制是否在 Git 更改视图中显示内联“打开文件”操作。",
			"config.showPushSuccessNotification": "控制在推送成功时是否显示通知。",
			"config.inputValidation": "控制何时显示提交消息输入验证。",
			"config.inputValidationLength": "控制显示提交消息长度警告的长度阈值。",
			"config.inputValidationSubjectLength": "控制显示警告的提交消息主题长度阈值。请取消设置它以继承 \"config.inputValidationLength\" 的值。",
			"config.detectSubmodules": "控制是否自动检测 Git 子模块。",
			"config.detectSubmodulesLimit": "控制可检测到的 Git 子模块的限制。",
			"config.alwaysShowStagedChangesResourceGroup": "始终显示“暂存的更改”资源组。",
			"config.alwaysSignOff": "控制所有提交的 signoff 标志。",
			"config.ignoredRepositories": "要忽略的 Git 存储库列表。",
			"config.scanRepositories": "在其中搜索 Git 存储库的路径的列表。",
			"config.showProgress": "控制 Git 操作是否显示进度提示。",
			"config.rebaseWhenSync": "在运行“同步”命令时，强制 Git 使用“变基”。",
			"config.confirmEmptyCommits": "在创建空提交时始终进行确认。",
			"config.fetchOnPull": "在拉取时是抓取所有分支还是仅当前分支。",
			"config.pullTags": "拉取时提取所有标签。",
			"config.autoStash": "在拉取前暂存所有更改，在成功拉取后还原这些更改。",
			"config.allowForcePush": "控制是否启用强制推送 (不论 force 还是 force-with-lease)。",
			"config.useForcePushWithLease": "控制是否使用更安全的 force-with-lease 进行强制推送。",
			"config.confirmForcePush": "控制在强制推送前是否进行确认。",
			"config.openDiffOnClick": "控制单击更改时是否应打开差异编辑器。否则将打开常规编辑器。",
			"config.supportCancellation": "控制在运行同步操作时是否出现通知，允许用户取消操作。",
			"config.branchSortOrder": "控制分支的排列顺序。",
			"colors.added": "已添加资源的颜色。",
			"colors.modified": "已修改资源的颜色。",
			"colors.deleted": "已删除资源的颜色。",
			"colors.untracked": "未跟踪资源的颜色。",
			"colors.ignored": "已忽略资源的颜色。",
			"colors.conflict": "存在冲突的资源的颜色。",
			"colors.submodule": "子模块资源的颜色。"
		}
	}
}